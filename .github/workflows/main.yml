# This is a basic workflow to help you get started with Actions

name: myWorkflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      # - name: Run a one-line script
      #  run: echo Hello, world!


      # Runs a set of commands using the runners shell
      #- name: Run a multi-line script
      #  run: |
      #    echo Add other actions to build,
      #    echo test, and deploy your project.
      
      - name: Initialization evironment
        env:
          DEBIAN_FRONTEND: noninteractive
          run: |
            set +e
            docker rmi `docker images -q`
            echo "Deleting files,please wait ..."
            sudo rm -rf \
              /usr/share/dotnet \
              /etc/mysql \
              /etc/php
            sudo -E apt-get -y purge \
              azure-cli \
              ghc* \
              zulu* \
              hhvm \
              llvm* \
              firefox \
              google* \
              dotnet* \
              powershell \
              openjdk* \
              mysql* \
              php*
            sudo -E apt-get update
            sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
            sudo -E apt-get -y autoremove --purge
            sudo -E apt-get clean
            
          - name: Upload artifact
            uses: actions/upload-artifact@master
            with:
              name: MyDemo
              path: /bin
